// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDrivingLicenseBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonFront;

  @NonNull
  public final Button buttonReverse;

  @NonNull
  public final Button buttonSaveLicense;

  @NonNull
  public final View divider;

  @NonNull
  public final View divider2;

  @NonNull
  public final ImageView imageCarnetFrente;

  @NonNull
  public final ImageView imageCarnetReverso;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvFront;

  @NonNull
  public final TextView tvReverse;

  private ActivityDrivingLicenseBinding(@NonNull RelativeLayout rootView,
      @NonNull Button buttonFront, @NonNull Button buttonReverse, @NonNull Button buttonSaveLicense,
      @NonNull View divider, @NonNull View divider2, @NonNull ImageView imageCarnetFrente,
      @NonNull ImageView imageCarnetReverso, @NonNull RelativeLayout relativeLayout,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvFront, @NonNull TextView tvReverse) {
    this.rootView = rootView;
    this.buttonFront = buttonFront;
    this.buttonReverse = buttonReverse;
    this.buttonSaveLicense = buttonSaveLicense;
    this.divider = divider;
    this.divider2 = divider2;
    this.imageCarnetFrente = imageCarnetFrente;
    this.imageCarnetReverso = imageCarnetReverso;
    this.relativeLayout = relativeLayout;
    this.toolbar = toolbar;
    this.tvFront = tvFront;
    this.tvReverse = tvReverse;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDrivingLicenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDrivingLicenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_driving_license, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDrivingLicenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonFront;
      Button buttonFront = ViewBindings.findChildViewById(rootView, id);
      if (buttonFront == null) {
        break missingId;
      }

      id = R.id.buttonReverse;
      Button buttonReverse = ViewBindings.findChildViewById(rootView, id);
      if (buttonReverse == null) {
        break missingId;
      }

      id = R.id.buttonSaveLicense;
      Button buttonSaveLicense = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveLicense == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.divider2;
      View divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.imageCarnetFrente;
      ImageView imageCarnetFrente = ViewBindings.findChildViewById(rootView, id);
      if (imageCarnetFrente == null) {
        break missingId;
      }

      id = R.id.imageCarnetReverso;
      ImageView imageCarnetReverso = ViewBindings.findChildViewById(rootView, id);
      if (imageCarnetReverso == null) {
        break missingId;
      }

      RelativeLayout relativeLayout = (RelativeLayout) rootView;

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvFront;
      TextView tvFront = ViewBindings.findChildViewById(rootView, id);
      if (tvFront == null) {
        break missingId;
      }

      id = R.id.tvReverse;
      TextView tvReverse = ViewBindings.findChildViewById(rootView, id);
      if (tvReverse == null) {
        break missingId;
      }

      return new ActivityDrivingLicenseBinding((RelativeLayout) rootView, buttonFront,
          buttonReverse, buttonSaveLicense, divider, divider2, imageCarnetFrente,
          imageCarnetReverso, relativeLayout, toolbar, tvFront, tvReverse);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
