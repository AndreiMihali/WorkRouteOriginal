// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.slider.Slider;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGeneralSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView appNotifications;

  @NonNull
  public final Slider searchRadius;

  @NonNull
  public final SwitchMaterial switchApp;

  @NonNull
  public final MaterialToolbar toolbarSettings;

  @NonNull
  public final TextView tvAboutUs;

  @NonNull
  public final TextView tvHowToUseWorkRoute;

  @NonNull
  public final TextView tvMapSettings;

  @NonNull
  public final TextView tvNotificationPreferences;

  @NonNull
  public final TextView workRadius;

  @NonNull
  public final TextView workRadiusColor;

  @NonNull
  public final Slider workRadiusSlider;

  private ActivityGeneralSettingsBinding(@NonNull LinearLayout rootView,
      @NonNull TextView appNotifications, @NonNull Slider searchRadius,
      @NonNull SwitchMaterial switchApp, @NonNull MaterialToolbar toolbarSettings,
      @NonNull TextView tvAboutUs, @NonNull TextView tvHowToUseWorkRoute,
      @NonNull TextView tvMapSettings, @NonNull TextView tvNotificationPreferences,
      @NonNull TextView workRadius, @NonNull TextView workRadiusColor,
      @NonNull Slider workRadiusSlider) {
    this.rootView = rootView;
    this.appNotifications = appNotifications;
    this.searchRadius = searchRadius;
    this.switchApp = switchApp;
    this.toolbarSettings = toolbarSettings;
    this.tvAboutUs = tvAboutUs;
    this.tvHowToUseWorkRoute = tvHowToUseWorkRoute;
    this.tvMapSettings = tvMapSettings;
    this.tvNotificationPreferences = tvNotificationPreferences;
    this.workRadius = workRadius;
    this.workRadiusColor = workRadiusColor;
    this.workRadiusSlider = workRadiusSlider;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGeneralSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGeneralSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_general_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGeneralSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appNotifications;
      TextView appNotifications = ViewBindings.findChildViewById(rootView, id);
      if (appNotifications == null) {
        break missingId;
      }

      id = R.id.searchRadius;
      Slider searchRadius = ViewBindings.findChildViewById(rootView, id);
      if (searchRadius == null) {
        break missingId;
      }

      id = R.id.switchApp;
      SwitchMaterial switchApp = ViewBindings.findChildViewById(rootView, id);
      if (switchApp == null) {
        break missingId;
      }

      id = R.id.toolbarSettings;
      MaterialToolbar toolbarSettings = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSettings == null) {
        break missingId;
      }

      id = R.id.tvAboutUs;
      TextView tvAboutUs = ViewBindings.findChildViewById(rootView, id);
      if (tvAboutUs == null) {
        break missingId;
      }

      id = R.id.tvHowToUseWorkRoute;
      TextView tvHowToUseWorkRoute = ViewBindings.findChildViewById(rootView, id);
      if (tvHowToUseWorkRoute == null) {
        break missingId;
      }

      id = R.id.tvMapSettings;
      TextView tvMapSettings = ViewBindings.findChildViewById(rootView, id);
      if (tvMapSettings == null) {
        break missingId;
      }

      id = R.id.tvNotificationPreferences;
      TextView tvNotificationPreferences = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationPreferences == null) {
        break missingId;
      }

      id = R.id.workRadius;
      TextView workRadius = ViewBindings.findChildViewById(rootView, id);
      if (workRadius == null) {
        break missingId;
      }

      id = R.id.workRadiusColor;
      TextView workRadiusColor = ViewBindings.findChildViewById(rootView, id);
      if (workRadiusColor == null) {
        break missingId;
      }

      id = R.id.workRadiusSlider;
      Slider workRadiusSlider = ViewBindings.findChildViewById(rootView, id);
      if (workRadiusSlider == null) {
        break missingId;
      }

      return new ActivityGeneralSettingsBinding((LinearLayout) rootView, appNotifications,
          searchRadius, switchApp, toolbarSettings, tvAboutUs, tvHowToUseWorkRoute, tvMapSettings,
          tvNotificationPreferences, workRadius, workRadiusColor, workRadiusSlider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
