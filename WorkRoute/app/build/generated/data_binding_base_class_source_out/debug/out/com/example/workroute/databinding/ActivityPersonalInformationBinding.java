// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPersonalInformationBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageButton btnEditHome;

  @NonNull
  public final ImageButton btnEditWork;

  @NonNull
  public final ImageButton buttonUpDown;

  @NonNull
  public final MaterialCardView cardCarInformation;

  @NonNull
  public final MaterialCardView cardViewImage;

  @NonNull
  public final CoordinatorLayout cordLayout;

  @NonNull
  public final ImageView editProfilePhoto;

  @NonNull
  public final ImageView imageLock;

  @NonNull
  public final LinearLayout lnInformation;

  @NonNull
  public final NestedScrollView nestedScroll;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final LinearLayout relLayout;

  @NonNull
  public final CoordinatorLayout relLayoutGeneral;

  @NonNull
  public final RelativeLayout relativeChangingColorOnClick;

  @NonNull
  public final TextView textUnlockSave;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final MaterialToolbar toolbarInformation;

  @NonNull
  public final TextView tvUserMail;

  @NonNull
  public final TextView txtCarColor;

  @NonNull
  public final TextView txtCarType;

  @NonNull
  public final TextView txtHomeAddress;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtPlateNumber;

  @NonNull
  public final TextView txtWorkAddress;

  private ActivityPersonalInformationBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageButton btnEditHome, @NonNull ImageButton btnEditWork,
      @NonNull ImageButton buttonUpDown, @NonNull MaterialCardView cardCarInformation,
      @NonNull MaterialCardView cardViewImage, @NonNull CoordinatorLayout cordLayout,
      @NonNull ImageView editProfilePhoto, @NonNull ImageView imageLock,
      @NonNull LinearLayout lnInformation, @NonNull NestedScrollView nestedScroll,
      @NonNull ImageView profileImage, @NonNull LinearLayout relLayout,
      @NonNull CoordinatorLayout relLayoutGeneral,
      @NonNull RelativeLayout relativeChangingColorOnClick, @NonNull TextView textUnlockSave,
      @NonNull TextView textView3, @NonNull MaterialToolbar toolbarInformation,
      @NonNull TextView tvUserMail, @NonNull TextView txtCarColor, @NonNull TextView txtCarType,
      @NonNull TextView txtHomeAddress, @NonNull TextView txtName, @NonNull TextView txtPlateNumber,
      @NonNull TextView txtWorkAddress) {
    this.rootView = rootView;
    this.btnEditHome = btnEditHome;
    this.btnEditWork = btnEditWork;
    this.buttonUpDown = buttonUpDown;
    this.cardCarInformation = cardCarInformation;
    this.cardViewImage = cardViewImage;
    this.cordLayout = cordLayout;
    this.editProfilePhoto = editProfilePhoto;
    this.imageLock = imageLock;
    this.lnInformation = lnInformation;
    this.nestedScroll = nestedScroll;
    this.profileImage = profileImage;
    this.relLayout = relLayout;
    this.relLayoutGeneral = relLayoutGeneral;
    this.relativeChangingColorOnClick = relativeChangingColorOnClick;
    this.textUnlockSave = textUnlockSave;
    this.textView3 = textView3;
    this.toolbarInformation = toolbarInformation;
    this.tvUserMail = tvUserMail;
    this.txtCarColor = txtCarColor;
    this.txtCarType = txtCarType;
    this.txtHomeAddress = txtHomeAddress;
    this.txtName = txtName;
    this.txtPlateNumber = txtPlateNumber;
    this.txtWorkAddress = txtWorkAddress;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPersonalInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPersonalInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_personal_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPersonalInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_edit_home;
      ImageButton btnEditHome = ViewBindings.findChildViewById(rootView, id);
      if (btnEditHome == null) {
        break missingId;
      }

      id = R.id.btn_edit_work;
      ImageButton btnEditWork = ViewBindings.findChildViewById(rootView, id);
      if (btnEditWork == null) {
        break missingId;
      }

      id = R.id.buttonUpDown;
      ImageButton buttonUpDown = ViewBindings.findChildViewById(rootView, id);
      if (buttonUpDown == null) {
        break missingId;
      }

      id = R.id.card_car_information;
      MaterialCardView cardCarInformation = ViewBindings.findChildViewById(rootView, id);
      if (cardCarInformation == null) {
        break missingId;
      }

      id = R.id.cardViewImage;
      MaterialCardView cardViewImage = ViewBindings.findChildViewById(rootView, id);
      if (cardViewImage == null) {
        break missingId;
      }

      id = R.id.cord_layout;
      CoordinatorLayout cordLayout = ViewBindings.findChildViewById(rootView, id);
      if (cordLayout == null) {
        break missingId;
      }

      id = R.id.editProfilePhoto;
      ImageView editProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (editProfilePhoto == null) {
        break missingId;
      }

      id = R.id.imageLock;
      ImageView imageLock = ViewBindings.findChildViewById(rootView, id);
      if (imageLock == null) {
        break missingId;
      }

      id = R.id.ln_information;
      LinearLayout lnInformation = ViewBindings.findChildViewById(rootView, id);
      if (lnInformation == null) {
        break missingId;
      }

      id = R.id.nestedScroll;
      NestedScrollView nestedScroll = ViewBindings.findChildViewById(rootView, id);
      if (nestedScroll == null) {
        break missingId;
      }

      id = R.id.profileImage;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.rel_layout;
      LinearLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      CoordinatorLayout relLayoutGeneral = (CoordinatorLayout) rootView;

      id = R.id.relativeChangingColorOnClick;
      RelativeLayout relativeChangingColorOnClick = ViewBindings.findChildViewById(rootView, id);
      if (relativeChangingColorOnClick == null) {
        break missingId;
      }

      id = R.id.textUnlock_Save;
      TextView textUnlockSave = ViewBindings.findChildViewById(rootView, id);
      if (textUnlockSave == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.toolbarInformation;
      MaterialToolbar toolbarInformation = ViewBindings.findChildViewById(rootView, id);
      if (toolbarInformation == null) {
        break missingId;
      }

      id = R.id.tv_userMail;
      TextView tvUserMail = ViewBindings.findChildViewById(rootView, id);
      if (tvUserMail == null) {
        break missingId;
      }

      id = R.id.txt_car_color;
      TextView txtCarColor = ViewBindings.findChildViewById(rootView, id);
      if (txtCarColor == null) {
        break missingId;
      }

      id = R.id.txt_car_type;
      TextView txtCarType = ViewBindings.findChildViewById(rootView, id);
      if (txtCarType == null) {
        break missingId;
      }

      id = R.id.txt_home_address;
      TextView txtHomeAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtHomeAddress == null) {
        break missingId;
      }

      id = R.id.txt_name;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_plateNumber;
      TextView txtPlateNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtPlateNumber == null) {
        break missingId;
      }

      id = R.id.txt_work_address;
      TextView txtWorkAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtWorkAddress == null) {
        break missingId;
      }

      return new ActivityPersonalInformationBinding((CoordinatorLayout) rootView, btnEditHome,
          btnEditWork, buttonUpDown, cardCarInformation, cardViewImage, cordLayout,
          editProfilePhoto, imageLock, lnInformation, nestedScroll, profileImage, relLayout,
          relLayoutGeneral, relativeChangingColorOnClick, textUnlockSave, textView3,
          toolbarInformation, tvUserMail, txtCarColor, txtCarType, txtHomeAddress, txtName,
          txtPlateNumber, txtWorkAddress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
