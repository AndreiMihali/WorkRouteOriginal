// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateAccountBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton buttonCreate;

  @NonNull
  public final TextView buttonSignin;

  @NonNull
  public final MaterialCardView cardEmail;

  @NonNull
  public final MaterialCardView cardName;

  @NonNull
  public final MaterialCardView cardPassword;

  @NonNull
  public final MaterialCardView cardPasswordConfirm;

  @NonNull
  public final TextInputEditText edConfirmpassRegister;

  @NonNull
  public final TextInputEditText edEmailRegister;

  @NonNull
  public final TextInputEditText edPassRegister;

  @NonNull
  public final TextInputEditText edUsernameRegister;

  @NonNull
  public final LinearLayout inputs;

  @NonNull
  public final TextInputLayout layoutConfirmPass;

  @NonNull
  public final TextInputLayout layoutEmail;

  @NonNull
  public final TextInputLayout layoutName;

  @NonNull
  public final TextInputLayout layoutPass;

  @NonNull
  public final LinearLayout texts;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityCreateAccountBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton buttonCreate, @NonNull TextView buttonSignin,
      @NonNull MaterialCardView cardEmail, @NonNull MaterialCardView cardName,
      @NonNull MaterialCardView cardPassword, @NonNull MaterialCardView cardPasswordConfirm,
      @NonNull TextInputEditText edConfirmpassRegister, @NonNull TextInputEditText edEmailRegister,
      @NonNull TextInputEditText edPassRegister, @NonNull TextInputEditText edUsernameRegister,
      @NonNull LinearLayout inputs, @NonNull TextInputLayout layoutConfirmPass,
      @NonNull TextInputLayout layoutEmail, @NonNull TextInputLayout layoutName,
      @NonNull TextInputLayout layoutPass, @NonNull LinearLayout texts,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.buttonCreate = buttonCreate;
    this.buttonSignin = buttonSignin;
    this.cardEmail = cardEmail;
    this.cardName = cardName;
    this.cardPassword = cardPassword;
    this.cardPasswordConfirm = cardPasswordConfirm;
    this.edConfirmpassRegister = edConfirmpassRegister;
    this.edEmailRegister = edEmailRegister;
    this.edPassRegister = edPassRegister;
    this.edUsernameRegister = edUsernameRegister;
    this.inputs = inputs;
    this.layoutConfirmPass = layoutConfirmPass;
    this.layoutEmail = layoutEmail;
    this.layoutName = layoutName;
    this.layoutPass = layoutPass;
    this.texts = texts;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_create;
      MaterialButton buttonCreate = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreate == null) {
        break missingId;
      }

      id = R.id.button_signin;
      TextView buttonSignin = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignin == null) {
        break missingId;
      }

      id = R.id.card_email;
      MaterialCardView cardEmail = ViewBindings.findChildViewById(rootView, id);
      if (cardEmail == null) {
        break missingId;
      }

      id = R.id.card_name;
      MaterialCardView cardName = ViewBindings.findChildViewById(rootView, id);
      if (cardName == null) {
        break missingId;
      }

      id = R.id.card_password;
      MaterialCardView cardPassword = ViewBindings.findChildViewById(rootView, id);
      if (cardPassword == null) {
        break missingId;
      }

      id = R.id.card_password_confirm;
      MaterialCardView cardPasswordConfirm = ViewBindings.findChildViewById(rootView, id);
      if (cardPasswordConfirm == null) {
        break missingId;
      }

      id = R.id.ed_confirmpass_register;
      TextInputEditText edConfirmpassRegister = ViewBindings.findChildViewById(rootView, id);
      if (edConfirmpassRegister == null) {
        break missingId;
      }

      id = R.id.ed_email_register;
      TextInputEditText edEmailRegister = ViewBindings.findChildViewById(rootView, id);
      if (edEmailRegister == null) {
        break missingId;
      }

      id = R.id.ed_pass_register;
      TextInputEditText edPassRegister = ViewBindings.findChildViewById(rootView, id);
      if (edPassRegister == null) {
        break missingId;
      }

      id = R.id.ed_username_register;
      TextInputEditText edUsernameRegister = ViewBindings.findChildViewById(rootView, id);
      if (edUsernameRegister == null) {
        break missingId;
      }

      id = R.id.inputs;
      LinearLayout inputs = ViewBindings.findChildViewById(rootView, id);
      if (inputs == null) {
        break missingId;
      }

      id = R.id.layout_confirm_pass;
      TextInputLayout layoutConfirmPass = ViewBindings.findChildViewById(rootView, id);
      if (layoutConfirmPass == null) {
        break missingId;
      }

      id = R.id.layout_email;
      TextInputLayout layoutEmail = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmail == null) {
        break missingId;
      }

      id = R.id.layout_name;
      TextInputLayout layoutName = ViewBindings.findChildViewById(rootView, id);
      if (layoutName == null) {
        break missingId;
      }

      id = R.id.layout_pass;
      TextInputLayout layoutPass = ViewBindings.findChildViewById(rootView, id);
      if (layoutPass == null) {
        break missingId;
      }

      id = R.id.texts;
      LinearLayout texts = ViewBindings.findChildViewById(rootView, id);
      if (texts == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityCreateAccountBinding((RelativeLayout) rootView, buttonCreate, buttonSignin,
          cardEmail, cardName, cardPassword, cardPasswordConfirm, edConfirmpassRegister,
          edEmailRegister, edPassRegister, edUsernameRegister, inputs, layoutConfirmPass,
          layoutEmail, layoutName, layoutPass, texts, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
