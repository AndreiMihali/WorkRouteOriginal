// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout deleteAccount;

  @NonNull
  public final LinearLayout driveLicense;

  @NonNull
  public final LinearLayout logout;

  @NonNull
  public final LinearLayout payMethod;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final LinearLayout settings;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView txtViewAsDriver;

  @NonNull
  public final TextView username;

  private ActivityProfileBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout deleteAccount, @NonNull LinearLayout driveLicense,
      @NonNull LinearLayout logout, @NonNull LinearLayout payMethod,
      @NonNull ImageView profileImage, @NonNull LinearLayout settings,
      @NonNull MaterialToolbar toolbar, @NonNull TextView txtViewAsDriver,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.deleteAccount = deleteAccount;
    this.driveLicense = driveLicense;
    this.logout = logout;
    this.payMethod = payMethod;
    this.profileImage = profileImage;
    this.settings = settings;
    this.toolbar = toolbar;
    this.txtViewAsDriver = txtViewAsDriver;
    this.username = username;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteAccount;
      LinearLayout deleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (deleteAccount == null) {
        break missingId;
      }

      id = R.id.driveLicense;
      LinearLayout driveLicense = ViewBindings.findChildViewById(rootView, id);
      if (driveLicense == null) {
        break missingId;
      }

      id = R.id.logout;
      LinearLayout logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.payMethod;
      LinearLayout payMethod = ViewBindings.findChildViewById(rootView, id);
      if (payMethod == null) {
        break missingId;
      }

      id = R.id.profileImage;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.settings;
      LinearLayout settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txt_view_asDriver;
      TextView txtViewAsDriver = ViewBindings.findChildViewById(rootView, id);
      if (txtViewAsDriver == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityProfileBinding((CoordinatorLayout) rootView, deleteAccount, driveLicense,
          logout, payMethod, profileImage, settings, toolbar, txtViewAsDriver, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
