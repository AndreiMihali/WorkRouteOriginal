// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPayMethodBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnAddPayMethod;

  @NonNull
  public final MaterialButton btnDeletePayMethods;

  @NonNull
  public final CoordinatorLayout content;

  @NonNull
  public final ProgressBar loadContent;

  @NonNull
  public final RecyclerView recyclerPayMethods;

  @NonNull
  public final MaterialToolbar toolbarPay;

  @NonNull
  public final TextView txtNull;

  private ActivityPayMethodBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnAddPayMethod, @NonNull MaterialButton btnDeletePayMethods,
      @NonNull CoordinatorLayout content, @NonNull ProgressBar loadContent,
      @NonNull RecyclerView recyclerPayMethods, @NonNull MaterialToolbar toolbarPay,
      @NonNull TextView txtNull) {
    this.rootView = rootView;
    this.btnAddPayMethod = btnAddPayMethod;
    this.btnDeletePayMethods = btnDeletePayMethods;
    this.content = content;
    this.loadContent = loadContent;
    this.recyclerPayMethods = recyclerPayMethods;
    this.toolbarPay = toolbarPay;
    this.txtNull = txtNull;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPayMethodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPayMethodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pay_method, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPayMethodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_addPayMethod;
      MaterialButton btnAddPayMethod = ViewBindings.findChildViewById(rootView, id);
      if (btnAddPayMethod == null) {
        break missingId;
      }

      id = R.id.btn_deletePayMethods;
      MaterialButton btnDeletePayMethods = ViewBindings.findChildViewById(rootView, id);
      if (btnDeletePayMethods == null) {
        break missingId;
      }

      CoordinatorLayout content = (CoordinatorLayout) rootView;

      id = R.id.loadContent;
      ProgressBar loadContent = ViewBindings.findChildViewById(rootView, id);
      if (loadContent == null) {
        break missingId;
      }

      id = R.id.recycler_payMethods;
      RecyclerView recyclerPayMethods = ViewBindings.findChildViewById(rootView, id);
      if (recyclerPayMethods == null) {
        break missingId;
      }

      id = R.id.toolbarPay;
      MaterialToolbar toolbarPay = ViewBindings.findChildViewById(rootView, id);
      if (toolbarPay == null) {
        break missingId;
      }

      id = R.id.txt_null;
      TextView txtNull = ViewBindings.findChildViewById(rootView, id);
      if (txtNull == null) {
        break missingId;
      }

      return new ActivityPayMethodBinding((CoordinatorLayout) rootView, btnAddPayMethod,
          btnDeletePayMethods, content, loadContent, recyclerPayMethods, toolbarPay, txtNull);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
