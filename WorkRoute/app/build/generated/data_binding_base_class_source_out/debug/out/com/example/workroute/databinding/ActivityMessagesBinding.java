// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMessagesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FloatingActionButton btnSend;

  @NonNull
  public final EditText edMessage;

  @NonNull
  public final LinearLayout lnEscribir;

  @NonNull
  public final ImageView profilePhotoMessages;

  @NonNull
  public final RecyclerView recyclerMensajes;

  @NonNull
  public final TextView status;

  @NonNull
  public final MaterialToolbar toolbarMessages;

  @NonNull
  public final TextView txtIsTyping;

  @NonNull
  public final TextView userNameMessages;

  private ActivityMessagesBinding(@NonNull RelativeLayout rootView,
      @NonNull FloatingActionButton btnSend, @NonNull EditText edMessage,
      @NonNull LinearLayout lnEscribir, @NonNull ImageView profilePhotoMessages,
      @NonNull RecyclerView recyclerMensajes, @NonNull TextView status,
      @NonNull MaterialToolbar toolbarMessages, @NonNull TextView txtIsTyping,
      @NonNull TextView userNameMessages) {
    this.rootView = rootView;
    this.btnSend = btnSend;
    this.edMessage = edMessage;
    this.lnEscribir = lnEscribir;
    this.profilePhotoMessages = profilePhotoMessages;
    this.recyclerMensajes = recyclerMensajes;
    this.status = status;
    this.toolbarMessages = toolbarMessages;
    this.txtIsTyping = txtIsTyping;
    this.userNameMessages = userNameMessages;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMessagesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMessagesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_messages, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMessagesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_send;
      FloatingActionButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.ed_message;
      EditText edMessage = ViewBindings.findChildViewById(rootView, id);
      if (edMessage == null) {
        break missingId;
      }

      id = R.id.ln_escribir;
      LinearLayout lnEscribir = ViewBindings.findChildViewById(rootView, id);
      if (lnEscribir == null) {
        break missingId;
      }

      id = R.id.profile_photo_messages;
      ImageView profilePhotoMessages = ViewBindings.findChildViewById(rootView, id);
      if (profilePhotoMessages == null) {
        break missingId;
      }

      id = R.id.recycler_mensajes;
      RecyclerView recyclerMensajes = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMensajes == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.toolbar_messages;
      MaterialToolbar toolbarMessages = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMessages == null) {
        break missingId;
      }

      id = R.id.txt_isTyping;
      TextView txtIsTyping = ViewBindings.findChildViewById(rootView, id);
      if (txtIsTyping == null) {
        break missingId;
      }

      id = R.id.user_name_messages;
      TextView userNameMessages = ViewBindings.findChildViewById(rootView, id);
      if (userNameMessages == null) {
        break missingId;
      }

      return new ActivityMessagesBinding((RelativeLayout) rootView, btnSend, edMessage, lnEscribir,
          profilePhotoMessages, recyclerMensajes, status, toolbarMessages, txtIsTyping,
          userNameMessages);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
