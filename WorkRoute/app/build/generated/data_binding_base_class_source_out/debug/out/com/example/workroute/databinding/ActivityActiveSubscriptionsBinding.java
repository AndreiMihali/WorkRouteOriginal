// Generated by view binder compiler. Do not edit!
package com.example.workroute.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workroute.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.divider.MaterialDivider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityActiveSubscriptionsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView botonDrag;

  @NonNull
  public final MaterialButton btnAccept;

  @NonNull
  public final MaterialButton btnDecline;

  @NonNull
  public final ImageButton buttonMessage;

  @NonNull
  public final MaterialDivider divider;

  @NonNull
  public final RelativeLayout informationUser;

  @NonNull
  public final ImageButton locationIcon;

  @NonNull
  public final ImageButton locationIcon1;

  @NonNull
  public final ImageView profilePhotoSheet;

  @NonNull
  public final ProgressBar progressCircular;

  @NonNull
  public final RecyclerView recyclerSubs;

  @NonNull
  public final FrameLayout secondSheet;

  @NonNull
  public final FrameLayout sheet;

  @NonNull
  public final RelativeLayout toolbarBottomSheet;

  @NonNull
  public final MaterialToolbar toolbarSubs;

  @NonNull
  public final TextView txtHomeAddressCustomer;

  @NonNull
  public final TextView txtNameSubscriber;

  @NonNull
  public final TextView txtNull;

  @NonNull
  public final TextView txtTotalPayTravel;

  @NonNull
  public final TextView txtWorkAddressCustomer;

  private ActivityActiveSubscriptionsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageView botonDrag, @NonNull MaterialButton btnAccept,
      @NonNull MaterialButton btnDecline, @NonNull ImageButton buttonMessage,
      @NonNull MaterialDivider divider, @NonNull RelativeLayout informationUser,
      @NonNull ImageButton locationIcon, @NonNull ImageButton locationIcon1,
      @NonNull ImageView profilePhotoSheet, @NonNull ProgressBar progressCircular,
      @NonNull RecyclerView recyclerSubs, @NonNull FrameLayout secondSheet,
      @NonNull FrameLayout sheet, @NonNull RelativeLayout toolbarBottomSheet,
      @NonNull MaterialToolbar toolbarSubs, @NonNull TextView txtHomeAddressCustomer,
      @NonNull TextView txtNameSubscriber, @NonNull TextView txtNull,
      @NonNull TextView txtTotalPayTravel, @NonNull TextView txtWorkAddressCustomer) {
    this.rootView = rootView;
    this.botonDrag = botonDrag;
    this.btnAccept = btnAccept;
    this.btnDecline = btnDecline;
    this.buttonMessage = buttonMessage;
    this.divider = divider;
    this.informationUser = informationUser;
    this.locationIcon = locationIcon;
    this.locationIcon1 = locationIcon1;
    this.profilePhotoSheet = profilePhotoSheet;
    this.progressCircular = progressCircular;
    this.recyclerSubs = recyclerSubs;
    this.secondSheet = secondSheet;
    this.sheet = sheet;
    this.toolbarBottomSheet = toolbarBottomSheet;
    this.toolbarSubs = toolbarSubs;
    this.txtHomeAddressCustomer = txtHomeAddressCustomer;
    this.txtNameSubscriber = txtNameSubscriber;
    this.txtNull = txtNull;
    this.txtTotalPayTravel = txtTotalPayTravel;
    this.txtWorkAddressCustomer = txtWorkAddressCustomer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityActiveSubscriptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityActiveSubscriptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_active_subscriptions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityActiveSubscriptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.boton_drag;
      ImageView botonDrag = ViewBindings.findChildViewById(rootView, id);
      if (botonDrag == null) {
        break missingId;
      }

      id = R.id.btn_accept;
      MaterialButton btnAccept = ViewBindings.findChildViewById(rootView, id);
      if (btnAccept == null) {
        break missingId;
      }

      id = R.id.btn_decline;
      MaterialButton btnDecline = ViewBindings.findChildViewById(rootView, id);
      if (btnDecline == null) {
        break missingId;
      }

      id = R.id.button_message;
      ImageButton buttonMessage = ViewBindings.findChildViewById(rootView, id);
      if (buttonMessage == null) {
        break missingId;
      }

      id = R.id.divider;
      MaterialDivider divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.information_user;
      RelativeLayout informationUser = ViewBindings.findChildViewById(rootView, id);
      if (informationUser == null) {
        break missingId;
      }

      id = R.id.location_icon;
      ImageButton locationIcon = ViewBindings.findChildViewById(rootView, id);
      if (locationIcon == null) {
        break missingId;
      }

      id = R.id.location_icon;
      ImageButton locationIcon1 = ViewBindings.findChildViewById(rootView, id);
      if (locationIcon1 == null) {
        break missingId;
      }

      id = R.id.profile_photo_sheet;
      ImageView profilePhotoSheet = ViewBindings.findChildViewById(rootView, id);
      if (profilePhotoSheet == null) {
        break missingId;
      }

      id = R.id.progress_circular;
      ProgressBar progressCircular = ViewBindings.findChildViewById(rootView, id);
      if (progressCircular == null) {
        break missingId;
      }

      id = R.id.recyclerSubs;
      RecyclerView recyclerSubs = ViewBindings.findChildViewById(rootView, id);
      if (recyclerSubs == null) {
        break missingId;
      }

      id = R.id.second_sheet;
      FrameLayout secondSheet = ViewBindings.findChildViewById(rootView, id);
      if (secondSheet == null) {
        break missingId;
      }

      id = R.id.sheet;
      FrameLayout sheet = ViewBindings.findChildViewById(rootView, id);
      if (sheet == null) {
        break missingId;
      }

      id = R.id.toolbar_bottom_sheet;
      RelativeLayout toolbarBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (toolbarBottomSheet == null) {
        break missingId;
      }

      id = R.id.toolbar_subs;
      MaterialToolbar toolbarSubs = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSubs == null) {
        break missingId;
      }

      id = R.id.txt_homeAddressCustomer;
      TextView txtHomeAddressCustomer = ViewBindings.findChildViewById(rootView, id);
      if (txtHomeAddressCustomer == null) {
        break missingId;
      }

      id = R.id.txt_name_subscriber;
      TextView txtNameSubscriber = ViewBindings.findChildViewById(rootView, id);
      if (txtNameSubscriber == null) {
        break missingId;
      }

      id = R.id.txt_null;
      TextView txtNull = ViewBindings.findChildViewById(rootView, id);
      if (txtNull == null) {
        break missingId;
      }

      id = R.id.txt_total_pay_travel;
      TextView txtTotalPayTravel = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalPayTravel == null) {
        break missingId;
      }

      id = R.id.txt_workAddressCustomer;
      TextView txtWorkAddressCustomer = ViewBindings.findChildViewById(rootView, id);
      if (txtWorkAddressCustomer == null) {
        break missingId;
      }

      return new ActivityActiveSubscriptionsBinding((CoordinatorLayout) rootView, botonDrag,
          btnAccept, btnDecline, buttonMessage, divider, informationUser, locationIcon,
          locationIcon1, profilePhotoSheet, progressCircular, recyclerSubs, secondSheet, sheet,
          toolbarBottomSheet, toolbarSubs, txtHomeAddressCustomer, txtNameSubscriber, txtNull,
          txtTotalPayTravel, txtWorkAddressCustomer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
